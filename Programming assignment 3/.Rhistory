list <-     split(Ranking,Ranking[,3])
list <-     split(Ranking,Ranking[,2])
View(list)
lapply(list, [1,])
lapply(list, [1])
list[1,1]
list[1,1,1]
list
list[1]
list[1,1]
list[1,[1,]
list[[1],1]
list[[1,1]]
subset(list)[1,1]
subset(list,1)[1,1]
x <- subset(list,1)
x <- lapply(list, function(y, num){})
unlist(LIST)
unlist(list)
unlisted <- unlist(list)
unlisted[1,1]
unlisted[1]
list$AK[1,c(1,3)]
list$AK[1,c(1,2)]
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
##Check outcome validity
possOutcomes <- c("heart attack", "heart failure", "pneumonia") ##Vector with possible outcomes
if (is.element(outcome,possOutcomes)== FALSE){
stop("invalid outcome")
}
##Table with the desired outcome column, excluding Not Available values, and Hospitals of the given State
if(outcome == "heart attack"){
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
}else
if(outcome == "heart failure"){
data <- subset.data.frame(data,data[,17] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"heart failure"=as.numeric(data[,17]))
}else
if(outcome == "pneumonia"){
data <- subset.data.frame(data,data[,23] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"pneumonia"= as.numeric(data[,23]))
}
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,function(list, num){
list <- list[order(list[,3]),list[,1],]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
##Check outcome validity
possOutcomes <- c("heart attack", "heart failure", "pneumonia") ##Vector with possible outcomes
if (is.element(outcome,possOutcomes)== FALSE){
stop("invalid outcome")
}
##Table with the desired outcome column, excluding Not Available values, and Hospitals of the given State
if(outcome == "heart attack"){
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
}else
if(outcome == "heart failure"){
data <- subset.data.frame(data,data[,17] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"heart failure"=as.numeric(data[,17]))
}else
if(outcome == "pneumonia"){
data <- subset.data.frame(data,data[,23] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"pneumonia"= as.numeric(data[,23]))
}
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,function(list, num){
list <- list[order(list[,3],list[,1]),]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
num <- 4
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
##Check outcome validity
possOutcomes <- c("heart attack", "heart failure", "pneumonia") ##Vector with possible outcomes
if (is.element(outcome,possOutcomes)== FALSE){
stop("invalid outcome")
}
##Table with the desired outcome column, excluding Not Available values, and Hospitals of the given State
if(outcome == "heart attack"){
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
}else
if(outcome == "heart failure"){
data <- subset.data.frame(data,data[,17] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"heart failure"=as.numeric(data[,17]))
}else
if(outcome == "pneumonia"){
data <- subset.data.frame(data,data[,23] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"pneumonia"= as.numeric(data[,23]))
}
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,function(list, num){
list <- list[order(list[,3],list[,1]),]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
data <- subset.data.frame(data,data[,23] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"pneumonia"= as.numeric(data[,23]))
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,function(list, num){
list <- list[order(list[,3],list[,1]),]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
num <- 4
finalrank <- lapply(splitStates,function(list, num){
list <- list[order(list[,3],list[,1]),]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
finalrank <- lapply(splitStates,function(list, num="Best"){
list <- list[order(list[,3],list[,1]),]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
finalrank
return(list[1,c(1,2)])
(list[1,c(1,2)])
list <- list[order(list[,3],list[,1]),]
list <- splitStates$AK[order(splitStates$AK[,3],splitStates$AK[,1]),]
list
list[1,c(1,2)]
remove(list)
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,function(list, num){
list <- list[order(list[,3],list[,1]),]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,function(list, num="best"){
list <- list[order(list[,3],list[,1]),]
if(num == "best"){
return(list[1,c(1,2)])
} else
if(num == "worst"){
return(list[nrow(Ranking),c(1,2)])
}else {
return(Ranking[num,c(1,2)])
}
})
finalrank
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankhospital.r')
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
lapply(splitStates, min)
lapply(splitStates, min(x[[3]]))
lapply(splitStates, min(x[3]))
lapply(splitStates, min()
lapply(splitStates, min())
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
splitStates$AK
splitStates$AK <- splitStates$AK[order(splitStates$AK[,3],splitStates$AK[,1]),]
if(num == "best"){
print(splitStates$AK[1,c(1,2)])
} else
if(num == "worst"){
print(splitStates$AK[nrow(splitStates$AK),c(1,2)])
}else {
print(splitStates$AK[num,c(1,2)])
}
})
splitStates$AK <- splitStates$AK[order(splitStates$AK[,3],splitStates$AK[,1]),]
if(num == "best"){
print(splitStates$AK[1,c(1,2)])
} else
if(num == "worst"){
print(splitStates$AK[nrow(splitStates$AK),c(1,2)])
}else {
print(splitStates$AK[num,c(1,2)])
}
num <- 1
num <- "best"
splitStates$AK <- splitStates$AK[order(splitStates$AK[,3],splitStates$AK[,1]),]
if(num == "best"){
print(splitStates$AK[1,c(1,2)])
} else
if(num == "worst"){
print(splitStates$AK[nrow(splitStates$AK),c(1,2)])
}else {
print(splitStates$AK[num,c(1,2)])
}
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack",2)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack",2)
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
splitStates
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
rankall("heart attack")
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
##Check outcome validity
possOutcomes <- c("heart attack", "heart failure", "pneumonia") ##Vector with possible outcomes
if (is.element(outcome,possOutcomes)== FALSE){
stop("invalid outcome")
}
##Table with the desired outcome column, excluding Not Available values, and Hospitals of the given State
if(outcome == "heart attack"){
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
}else
if(outcome == "heart failure"){
data <- subset.data.frame(data,data[,17] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"heart failure"=as.numeric(data[,17]))
}else
if(outcome == "pneumonia"){
data <- subset.data.frame(data,data[,23] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"pneumonia"= as.numeric(data[,23]))
}
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,FUN=function(list,num){
list <- list[order(list[,2],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
},num)
return(data.frame(hospital = unlist(finalrank), states = names(splitStates)))
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
##Check outcome validity
possOutcomes <- c("heart attack", "heart failure", "pneumonia") ##Vector with possible outcomes
if (is.element(outcome,possOutcomes)== FALSE){
stop("invalid outcome")
}
##Table with the desired outcome column, excluding Not Available values, and Hospitals of the given State
if(outcome == "heart attack"){
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
}else
if(outcome == "heart failure"){
data <- subset.data.frame(data,data[,17] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"heart failure"=as.numeric(data[,17]))
}else
if(outcome == "pneumonia"){
data <- subset.data.frame(data,data[,23] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"pneumonia"= as.numeric(data[,23]))
}
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,FUN=function(list,num){
list <- list[order(list[,2],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
},num)
finalrank
unlist(finalrank)
data.frame(unlist(finalrank)[1],unlist(finalrank)[2])
data.frame(unlist(finalrank)[,1],unlist(finalrank)[,2])
data.frame(unlist(finalrank)[,1],unlist(finalrank)[,2])
data.frame(unlist(finalrank)
data.frame(unlist(finalrank))
data.frame(unlist(finalrank)[2])
data.frame(finalrank)
data.frame(finalrank$AK)
names(finalrank)
data.frame(hospital=unlist(finalrank), state=names(finalrank))
x <- data.frame(hospital=unlist(finalrank), state=names(finalrank))
x
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
head(rankall("heart attack", 20), 10)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
data <- read.csv("outcome-of-care-measures.csv", stringsAsFactors = FALSE)   ## Assumes the file is in the WD
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
View(data)
View(StateHosp)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name
,"heart attack"=as.numeric(data[,11]))
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,2])
finalrank <- lapply(splitStates,FUN=function(list,num=20){
list <- list[order(list[,2],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
})
data.frame(hospital = unlist(finalrank), states = names(finalrank)))
View(finalrank)
data.frame(hospital = unlist(finalrank), states = names(finalrank))
splitStates <- split(Ranking,Ranking[,3])
data <- subset.data.frame(data,data[,11] != "Not Available")
StateHosp<- data.frame("Hospital.Name"=data$Hospital.Name,"State"=data$State
,"heart attack"=as.numeric(data[,11]))
Ranking <- StateHosp[order(StateHosp[,2],StateHosp[,1]),]
splitStates <- split(Ranking,Ranking[,3])
finalrank <- lapply(splitStates,FUN=function(
splitStates <- split(Ranking,Ranking[,3])
splitStates <- split(Ranking,Ranking[,3])
finalrank <- lapply(splitStates,FUN=function(list,num=20){
list <- list[order(list[,2],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
})
data.frame(hospital = unlist(finalrank), states = names(finalrank))
View(splitStates)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
remove(Ranking)
splitStates <- split(StateHosp,StateHosp[,2])
View(splitStates)
StateHosp[,2]
splitStates <- split(StateHosp,StateHosp[,2])
View(splitStates)
View(splitStates)
finalrank <- lapply(splitStates,FUN=function(list,num){
list <- list[order(list[,2],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
},20)
data.frame(hospital = unlist(finalrank), states = names(finalrank))
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
finalrank <- lapply(splitStates,FUN=function(list,num){
list <- list[order(list[,2],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
},20)
finalrank <- lapply(splitStates,FUN=function(list,num){
list <- list[order(list[32],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
},20)
finalrank <- lapply(splitStates,FUN=function(list,num){
list <- list[order(list[2],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
},20)
finalrank <- lapply(splitStates,FUN=function(list,num){
list <- list[order(list[3],list[,1]),]
if(num == "best"){
return(list[1,1])
} else
if(num == "worst"){
return(list[nrow(list),1])
}else {
return(list[num,1])
}
},20)
data.frame(hospital = unlist(finalrank), states = names(finalrank))
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
head(rankall("heart attack", 20), 10)
View(splitStates)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
tail(rankall("heart failure"), 10)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/Best.R')
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/Best.R')
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankhospital.r')
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
View(r)
source('C:/Users/Miguel/datasciencecoursera/Programming assignment 3/rankall.r')
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
